var search_data = {"index":{"searchIndex":["linkedlist","node","append()","at()","contains?()","find()","insert_at()","new()","new()","pop()","prepend()","remove_at()","to_s()"],"longSearchIndex":["linkedlist","linkedlist::node","linkedlist#append()","linkedlist#at()","linkedlist#contains?()","linkedlist#find()","linkedlist#insert_at()","linkedlist::new()","linkedlist::node::new()","linkedlist#pop()","linkedlist#prepend()","linkedlist#remove_at()","linkedlist#to_s()"],"info":[["LinkedList","","LinkedList.html","",""],["LinkedList::Node","","LinkedList/Node.html","",""],["append","LinkedList","LinkedList.html#method-i-append","(value = nil)","<p>Adds to front of the list *value: data identified with node **default is\nempty node\n"],["at","LinkedList","LinkedList.html#method-i-at","(index)","<p>Insert to a list at a specified location *index: specified location to\ninsert to list\n"],["contains?","LinkedList","LinkedList.html#method-i-contains-3F","(value)","<p>check if element exist in list *value: element to check  *return: true if\nelement exist in list or false â€¦\n"],["find","LinkedList","LinkedList.html#method-i-find","(value)","<p>check if element exist in list *value element to check *return: index of\nmatched element or nil\n"],["insert_at","LinkedList","LinkedList.html#method-i-insert_at","(index, value = nil)",""],["new","LinkedList","LinkedList.html#method-c-new","()",""],["new","LinkedList::Node","LinkedList/Node.html#method-c-new","(value = nil)",""],["pop","LinkedList","LinkedList.html#method-i-pop","()","<p>remove from end of list\n"],["prepend","LinkedList","LinkedList.html#method-i-prepend","(value = nil)","<p>Adds to the end of the list *value: data identified with node **default is\nempty node\n"],["remove_at","LinkedList","LinkedList.html#method-i-remove_at","(index)","<p>remove element from list *index: index value of node to remove\n"],["to_s","LinkedList","LinkedList.html#method-i-to_s","()","<p>print list\n"]]}}